// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  category_id   Int
  name          String          @unique
  description   String
  product_image String[]
  category      ProductCategory @relation(fields: [category_id], references: [id])
  product_items ProductItem[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt

  @@map("products")
}

model ProductCategory {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  products   Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  options    Option[]

  @@map("product_categories")
}

model Option {
  id            Int             @id @default(autoincrement())
  category_id   Int
  option_name   String          @db.VarChar(50)
  category      ProductCategory @relation(fields: [category_id], references: [id])
  option_values OptionValue[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt

  @@map("options")
}

model ProductItem {
  id            Int                      @id @default(autoincrement())
  product_id    Int
  SKU           String                   @db.VarChar(50)
  qty_in_stock  Int
  qty_sold      Int
  price         Decimal                  @db.Decimal(10, 2)
  product       Product                  @relation(fields: [product_id], references: [id])
  option_values ProductItemOptionValue[]
  created_at    DateTime                 @default(now())
  updated_at    DateTime                 @updatedAt

  @@map("product_items")
}

model OptionValue {
  id            Int                      @id @default(autoincrement())
  option_id     Int
  value         String                   @db.VarChar(50)
  qty_by_option Int
  options       Option                   @relation(fields: [option_id], references: [id])
  product_items ProductItemOptionValue[]
  created_at    DateTime                 @default(now())
  updated_at    DateTime                 @updatedAt

  @@map("option_values")
}

model ProductItemOptionValue {
  product_items_id Int
  option_values_id Int
  product_item     ProductItem @relation(fields: [product_items_id], references: [id])
  option_value     OptionValue @relation(fields: [option_values_id], references: [id])
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt

  @@id([product_items_id, option_values_id])
  @@map("product_item_option_values")
}
